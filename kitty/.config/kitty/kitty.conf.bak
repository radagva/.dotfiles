# BEGIN_KITTY_THEME
# Vague
include current-theme.conf
# END_KITTY_THEME

#- UI window
# hide_window_decorations yes

#- UI theme
background_opacity 1
background_blur 65

#- third party
allow_remote_control yes
listen_on unix:/tmp/mykitty
# shell /opt/homebrew/bin/nu

#- MacOS specific options
macos_option_as_alt right
macos_titlebar_color background

#- Layout
enabled_layouts splits,stack

map cmd+d launch --location=vsplit
map cmd+shift+d launch --location=hsplit

## Move the active window to the indicated screen edge
map ctrl+shift+up layout_action move_to_screen_edge top
map ctrl+shift+left layout_action move_to_screen_edge left
map ctrl+shift+right layout_action move_to_screen_edge right
map ctrl+shift+down layout_action move_to_screen_edge bottom

## Switch focus to the neighboring window in the indicated direction
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right

# Unset the mapping to pass the keys to neovim
map --when-focus-on var:IS_NVIM ctrl+j
map --when-focus-on var:IS_NVIM ctrl+k
map --when-focus-on var:IS_NVIM ctrl+h
map --when-focus-on var:IS_NVIM ctrl+l

# the 3 here is the resize amount, adjust as needed
# map alt+j kitten relative_resize.py down  3
# map alt+k kitten relative_resize.py up    3
# map alt+h kitten relative_resize.py left  3
# map alt+l kitten relative_resize.py right 3

map --when-focus-on var:IS_NVIM alt+j
map --when-focus-on var:IS_NVIM alt+k
map --when-focus-on var:IS_NVIM alt+h
map --when-focus-on var:IS_NVIM alt+l

